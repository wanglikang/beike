<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.demo.beike.entity.dao.AppointmentDetailMapper">
  <resultMap id="BaseResultMap" type="cn.demo.beike.entity.AppointmentDetail">
    <id column="id" jdbcType="INTEGER" property="id" />
    <id column="appointmentID" jdbcType="INTEGER" property="appointmentId" />
    <result column="personNumber" jdbcType="INTEGER" property="personnumber" />
    <result column="beginTime" jdbcType="TIMESTAMP" property="begintime" />
    <result column="endTime" jdbcType="TIMESTAMP" property="endtime" />
    <result column="number" jdbcType="INTEGER" property="number" />
  </resultMap>
  <sql id="Base_Column_List">
    id, appointmentID, personNumber, beginTime, endTime, number
  </sql>
  <select id="selectByPrimaryKey" parameterType="cn.demo.beike.entity.AppointmentDetailKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from appointmentDetail
    where id = #{id,jdbcType=INTEGER}
      and appointmentID = #{appointmentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="cn.demo.beike.entity.AppointmentDetailKey">
    delete from appointmentDetail
    where id = #{id,jdbcType=INTEGER}
      and appointmentID = #{appointmentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.demo.beike.entity.AppointmentDetail">
    insert into appointmentDetail (id, appointmentID, personNumber, 
      beginTime, endTime, number
      )
    values (#{id,jdbcType=INTEGER}, #{appointmentId,jdbcType=INTEGER}, #{personnumber,jdbcType=INTEGER},
      #{begintime,jdbcType=TIMESTAMP}, #{endtime,jdbcType=TIMESTAMP}, #{number,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.demo.beike.entity.AppointmentDetail">
    insert into appointmentDetail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="appointmentId != null">
        appointmentID,
      </if>
      <if test="personnumber != null">
        personNumber,
      </if>
      <if test="begintime != null">
        beginTime,
      </if>
      <if test="endtime != null">
        endTime,
      </if>
      <if test="number != null">
        number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="appointmentId != null">
        #{appointmentid,jdbcType=INTEGER},
      </if>
      <if test="personnumber != null">
        #{personnumber,jdbcType=INTEGER},
      </if>
      <if test="begintime != null">
        #{begintime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null">
        #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.demo.beike.entity.AppointmentDetail">
    update appointmentDetail
    <set>
      <if test="personnumber != null">
        personNumber = #{personnumber,jdbcType=INTEGER},
      </if>
      <if test="begintime != null">
        beginTime = #{begintime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null">
        endTime = #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
      and appointmentID = #{appointmentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.demo.beike.entity.AppointmentDetail">
    update appointmentDetail
    set personNumber = #{personnumber,jdbcType=INTEGER},
      beginTime = #{begintime,jdbcType=TIMESTAMP},
      endTime = #{endtime,jdbcType=TIMESTAMP},
      number = #{number,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
      and appointmentID = #{appointmentId,jdbcType=INTEGER}
  </update>

</mapper>